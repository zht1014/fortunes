name: build
on:
  push:
  pull_request:
jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write # needed for signing the images with GitHub OIDC Token

    steps:

      - name: Install Cosign
        uses: sigstore/cosign-installer@v3.1.1
      - name: Check install!
        run: cosign version


      - name: Checkout code
        uses: actions/checkout@v2

      # - name: Build an image from Dockerfile
      #   run: |
      #     docker build -t docker.io/my-organization/my-app:${{ github.sha }} .

      - name: Run Trivy vulnerability scanner
        id: scan
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'docker.io/my-organization/my-app:${{ github.sha }}'
          scan-type: 'fs'
          scan-ref: '.'
          format: 'table'
          exit-code: '1'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'CRITICAL'
          output: 'trivy-output.txt'
          
      - name: Send Failure notification
        if: always() && (steps.scan.outcome == 'failure')
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_URL }}
          SLACK_MESSAGE: 'Failed trivy scan'

      # - name: Upload fail report
      #   if: always() && (steps.scan.outcome == 'failure')
      #   uses: MeilCli/slack-upload-file@v3
      #   with:
      #     slack_token: ${{ secrets.SLACK_TOKEN }}
      #     channel_id: ${{ secrets.SLACK_CHANNEL_ID }}
      #     file_path: '$PWD/trivy-output.txt'
      #     file_type: 'text'
      #     file_name: 'trivy-output.txt'
      #     title: 'title of file'
      #     initial_comment: 'post by slack-upload-file'

      - name: Upload to slack step
        if: always() && (steps.scan.outcome == 'failure')
        uses: adrey/slack-file-upload-action@master
        with:
          token: ${{ secrets.SLACK_TOKEN }}
          path: trivy-output.txt
          channel: ${{ secrets.SLACK_CHANNEL_ID }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
          
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - id: docker_meta
        uses: docker/metadata-action@v4.4.0
        with:
          images: ghcr.io/sigstore/sample-honk
          tags: type=sha,format=long
      
      - name: Build and push
        id: build-and-push
        uses: docker/build-push-action@v5
        with:
          push: true
          tags: madridboi/madridboi:latest
          # tags: ${{ steps.docker_meta.outputs.tags }}

      - name: Sign the images with GitHub OIDC Token
        env:
          DIGEST: ${{ steps.build-and-push.outputs.digest }}
          TAGS: madridboi/madridboi:latest
        run: cosign sign --yes "${TAGS}@${DIGEST}"

      - name: Send success notification
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_URL }}
          SLACK_MESSAGE: "*Image built and signed*\n
                          *Name:* ZHANG HAOTIAN\n
                          *Matriculation:* A0287258M\n
                          *Email:* e1285204@u.nus.edu\n
                          *Git:* https://github.com/zht1014/fortunes\n
                          *Docker:* https://hub.docker.com/repository/docker/madridboi/madridboi"


      
        

        

    
        

        

            




